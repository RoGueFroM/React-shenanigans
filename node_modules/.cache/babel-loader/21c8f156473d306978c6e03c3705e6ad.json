{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Free practice\\\\React Practice\\\\tutorchik\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { Lesson, Counter } from \"./Practice code/PropTypes.js\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; // PropTypes\n// // Node:\n// Component.propTypes = {\n// \tnode: PropTypes.node\n// }\n// // Element:\n// Component.propTypes = {\n// \telem: PropTypes.element\n// }\n// // Instance of:\n// Component.propTypes = {\n// \tinstance: PropTypes.instanceOf(Constructor)\n// }\n// // One of:\n// Component.propTypes = {\n// \telem: PropTypes.oneOf([\"var1\", \"var2\"])\n// }\n// // One of type:\n// Component.propTypes = {\n// \telem: PropTypes.oneOfType([\n// \t\tPropTypes.string, \n// \t\tPropTypes.number\n// \t])\n// }\n// // Array of / Object of:\n// Component.propTypes = {\n// \tarray: PropTypes.arrayOf(PropTypes.string),\n// \tobject: PropTypes.objectOf(PropTypes.number)\t\t\n// }\n// // Shape:\n// Component.propTypes = {\n// \tobj: PropTypes.shape({\n// \t\tcolor: PropTypes.string,\n// \t\tfontSize: PropTypes.number,\n// \t\tlineHeight:\tPropTypes.number\n// \t})\n// }\n// ====================================================================================\n\nReactDOM.render(React.createElement(Lesson, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, \" \", React.createElement(Counter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), \" \"), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\projects\\Free practice\\React Practice\\tutorchik\\src\\index.js"],"names":["React","Component","ReactDOM","PropTypes","Lesson","Counter","App","serviceWorker","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,EAAgBC,OAAhB,QAA8B,8BAA9B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAL,QAAQ,CAACM,MAAT,CAAgB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAS,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAT,MAAhB,EAAgDC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhD;AACAH,aAAa,CAACI,UAAd","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport {Lesson, Counter} from \"./Practice code/PropTypes.js\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// PropTypes\r\n\r\n// // Node:\r\n// Component.propTypes = {\r\n// \tnode: PropTypes.node\r\n// }\r\n\r\n// // Element:\r\n// Component.propTypes = {\r\n// \telem: PropTypes.element\r\n// }\r\n\r\n// // Instance of:\r\n// Component.propTypes = {\r\n// \tinstance: PropTypes.instanceOf(Constructor)\r\n// }\r\n\r\n// // One of:\r\n// Component.propTypes = {\r\n// \telem: PropTypes.oneOf([\"var1\", \"var2\"])\r\n// }\r\n\r\n// // One of type:\r\n// Component.propTypes = {\r\n// \telem: PropTypes.oneOfType([\r\n// \t\tPropTypes.string, \r\n// \t\tPropTypes.number\r\n// \t])\r\n// }\r\n\r\n// // Array of / Object of:\r\n// Component.propTypes = {\r\n// \tarray: PropTypes.arrayOf(PropTypes.string),\r\n// \tobject: PropTypes.objectOf(PropTypes.number)\t\t\r\n// }\r\n\r\n// // Shape:\r\n// Component.propTypes = {\r\n// \tobj: PropTypes.shape({\r\n// \t\tcolor: PropTypes.string,\r\n// \t\tfontSize: PropTypes.number,\r\n// \t\tlineHeight:\tPropTypes.number\r\n// \t})\r\n// }\r\n\r\n// ====================================================================================\r\n\r\nReactDOM.render(<Lesson> <Counter /> </Lesson>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}